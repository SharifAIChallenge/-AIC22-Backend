# Generated by Django 3.0.1 on 2022-07-07 18:18

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('team', '0002_team_is_finalist'),
    ]

    operations = [
        migrations.CreateModel(
            name='Clan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=400, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('score', models.PositiveIntegerField(default=0)),
                ('wins', models.PositiveIntegerField(default=0)),
                ('losses', models.PositiveIntegerField(default=0)),
                ('draws', models.PositiveIntegerField(default=0)),
                ('leader', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='owned_clan', to='team.Team')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=1000, unique=True)),
                ('file', models.FileField(upload_to='')),
                ('active', models.BooleanField(default=True)),
                ('infra_token', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', models.CharField(choices=[('failed', 'Failed'), ('successful', 'Successful'), ('running', 'Running'), ('freeze', 'Freeze'), ('pending', 'pending')], default='freeze', max_length=100)),
                ('log', models.FileField(blank=True, null=True, upload_to='')),
                ('log_file_token', models.CharField(blank=True, max_length=1000, null=True)),
                ('infra_token', models.CharField(blank=True, max_length=1000, null=True)),
                ('team1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches_first', to='team.Team')),
                ('team2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches_second', to='team.Team')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=1000, unique=True)),
                ('type', models.CharField(choices=[('normal', 'Normal'), ('friendly', 'Friendly'), ('clanwar', 'Clanwar'), ('bot', 'Bot'), ('final', 'Final')], default='normal', max_length=100)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('is_hidden', models.BooleanField(default=False)),
                ('priority', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MatchInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('team1_score', models.PositiveIntegerField(blank=True, null=True)),
                ('team2_score', models.PositiveIntegerField(blank=True, null=True)),
                ('match_duration', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_info', to='challenge.Map')),
                ('match', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='match_info', to='challenge.Match')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='match',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='challenge.Tournament'),
        ),
        migrations.AddField(
            model_name='match',
            name='winner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='won_matches', to='team.Team'),
        ),
        migrations.CreateModel(
            name='LobbyQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('game_type', models.CharField(choices=[('friendly_match', 'Friendly match'), ('level_based_tournament', 'Level based tournament')], max_length=50)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lobby_queues', to='team.Team')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LevelMatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='level_matches', to='challenge.Level')),
                ('match', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='level_match', to='challenge.Match')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LevelBasedTournament',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('size', models.PositiveSmallIntegerField(default=8)),
                ('tournament', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='level_based_tournament', to='challenge.Tournament')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='level',
            name='level_based_tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='levels', to='challenge.LevelBasedTournament'),
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tournament_name', models.CharField(max_length=512)),
                ('start_time', models.DateTimeField()),
                ('total_matches', models.PositiveIntegerField(default=0)),
                ('run', models.BooleanField(default=False)),
                ('two_way', models.BooleanField(default=False)),
                ('match_map', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='leagues', to='challenge.Map')),
            ],
        ),
        migrations.CreateModel(
            name='ClanWar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('clan1', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='clanwars1', to='challenge.Clan')),
                ('clan2', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='clanwars2', to='challenge.Clan')),
                ('tournament', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='clanwar', to='challenge.Tournament')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClanTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clan', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='team.Team')),
                ('teams', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='challenge.Clan')),
            ],
        ),
    ]
